const mongoose = require('mongoose');

// Replace with your MongoDB connection string
const MONGODB_URI = 'mongodb://localhost:27017/cypto'; // Update this if different

async function cleanupDatabase() {
  try {
    console.log('🔗 Connecting to MongoDB...');
    await mongoose.connect(MONGODB_URI);
    console.log('✅ Connected to MongoDB');

    // Get the users collection directly
    const db = mongoose.connection.db;
    const usersCollection = db.collection('users');

    // Check how many documents have null firebaseUid
    const nullCount = await usersCollection.countDocuments({ firebaseUid: null });
    console.log(`📊 Found ${nullCount} documents with firebaseUid: null`);

    if (nullCount > 0) {
      // Show the null documents
      const nullDocs = await usersCollection.find({ firebaseUid: null }).toArray();
      console.log('🔍 Documents with null firebaseUid:', nullDocs.map(doc => ({
        _id: doc._id,
        email: doc.email,
        firebaseUid: doc.firebaseUid
      })));

      // Delete all documents with null firebaseUid
      const deleteResult = await usersCollection.deleteMany({ firebaseUid: null });
      console.log(`🗑️  Deleted ${deleteResult.deletedCount} documents with null firebaseUid`);
    } else {
      console.log('✅ No documents with null firebaseUid found');
    }

    // Verify cleanup
    const remainingNull = await usersCollection.countDocuments({ firebaseUid: null });
    console.log(`📊 Remaining documents with null firebaseUid: ${remainingNull}`);

    console.log('✅ Database cleanup completed');
  } catch (error) {
    console.error('❌ Cleanup failed:', error);
  } finally {
    await mongoose.connection.close();
    console.log('🔌 Database connection closed');
  }
}

// Run the cleanup
cleanupDatabase();